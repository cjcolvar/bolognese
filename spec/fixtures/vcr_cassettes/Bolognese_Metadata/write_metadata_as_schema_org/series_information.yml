---
http_interactions:
- request:
    method: get
    uri: https://api.datacite.org/dois/10.4229/23rdeupvsec2008-5co.8.3?include=media,client
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Mozilla/5.0 (compatible; Maremma/4.7.1; mailto:info@datacite.org)
      Accept:
      - text/html,application/json,application/xml;q=0.9, text/plain;q=0.8,image/png,*/*;q=0.5
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Sun, 12 Jul 2020 11:21:22 GMT
      Content-Type:
      - application/json; charset=utf-8
      Connection:
      - keep-alive
      Status:
      - 200 OK
      X-Anonymous-Consumer:
      - 'true'
      Cache-Control:
      - max-age=0, private, must-revalidate
      Vary:
      - Accept-Encoding, Origin
      X-Request-Id:
      - 6106b302-5591-4c15-a2d8-7c944207d13e
      Etag:
      - W/"68926450631014ffa04747fdce3514ed"
      X-Runtime:
      - '0.473018'
      X-Powered-By:
      - Phusion Passenger 6.0.5
      Server:
      - nginx/1.14.0 + Phusion Passenger 6.0.5
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Sun, 12 Jul 2020 11:21:22 GMT
recorded_with: VCR 3.0.3
